#!/usr/bin/env bash

BOOTSTRAP_DIR="$(cd "$(dirname "$0")" && pwd)"

# Check if the dotfiles are cloned and if not clone them
if [ -d "~/.dotfiles" ]; then
    git clone https://github.com/fletchto99/dotfiles.git ~/.dotfiles
else
    echo "~/.dotfiles directory already exists! Make sure to git pull to ensure it is up to date"
fi

# Homebrew process
# if ! command -v brew &> /dev/null; then
    read -p "Do you wish to install homebrew? " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Install homebrew
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

        # Ensure homebrew is up to date
        brew update
        brew upgrade
    fi

    read -p "Do you wish to install homebrew defaults? " -n 1 -r
    echo

    COUNTER=0

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        (cd ${BOOTSTRAP_DIR}/../; brew bundle)
        ((COUNTER++))
    fi

    if [ "$COUNTER" -gt 0 ]; then
        echo "Cleanuing up installers...."
        brew cleanup
    fi
# else
#     echo "Homebrew already installed, skipping brew setup"
# fi

# Setup iTerm2 Configs if iTerm2 is installed
if [ -d "/Applications/iTerm.app/" ]; then
    read -p "Do you wish to setup iTerm configs? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Backup old iterm configs
        if [ -d ~/.iterm2 ]; then
            mkdir -p ~/dotfiles_old/.iterm2
            cp -r ~/.iterm2 ~/dotfiles_old/.iterm2
            rm -r ~/.iterm2
        fi

        # Configure iTerm 2 preferences
        ln -s  ~/.dotfiles/.iterm2 ~
        defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
        defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/.iterm2"
        sudo dscl . -create /Users/$USER UserShell /usr/local/bin/zsh
    fi
else
    echo "iTerm not installed, skipping iTerm setup!"
fi

# Link alfred preferences
if [ -d "/Applications/Alfred 4.app/" ]; then
    read -p "Do you wish to setup alfred 4 configs? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Backup old alfred configs
        if [ -d ~/.alfred ]; then
            mkdir -p ~/dotfiles_old/.alfred
            cp -r ~/.alfred ~/dotfiles_old/.alfred
            rm -r ~/.alfred
        fi

        # Configure Alfred preferences
        ln -s  ~/.dotfiles/.alfred ~
    fi
else
    echo "Alfred not installed, skipping alfred setup!"
fi

# Install Oh My Zsh
read -p "Do you wish to install Oh-My-ZSH? " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    /bin/bash -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

# Link dotfiles
read -p "Do you wish to link your dotfiles? (old ones will be backed up to ~/dotfiles_old) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    mkdir -p ~/dotfiles_old

    files=( ".aliases" ".curlrc" ".editorconfig" ".exports" ".functions" ".gdbinit" ".gitconfig" ".gitconfig_work" ".gitignore_global" ".inputrc" ".screenrc" ".wgetrc" ".zshrc")

    for file in "${files[@]}"
    do
        if [ -f ~/$file ]; then
            cp -L ~/$file ~/dotfiles_old/$file
            rm -f ~/$file
        fi
        ln -s ~/.dotfiles/$file ~/$file
    done
fi

# Setup apple default preferences
read -p "Do you wish to setup some Apple defaults? " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    $BOOTSTRAP_DIR/macos
fi
