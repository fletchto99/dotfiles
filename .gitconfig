[core]
  excludesfile = ~/.gitignore_global
  untrackedCache = true
  editor = code --wait

[user]
  name = Matt Langlois
  email = fletchto99@gmail.com

[commit]
  gpgsign = true

[github]
  user = fletchto99
  shelluser = matt

[protocol]
  version = 2

[fetch]
  prune = true

[push]
  default = simple

[pull]
  rebase = true

[color]
  ui = true

[color "branch"]
  current = magenta
  remote = cyan

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red reverse
  new = green reverse
  whitespace = white reverse

[color "status"]
  added = green
  changed = cyan
  untracked = blue bold
  branch = magenta

[diff]
  renames = copies
  tool = vscode

[diff "bin"]
  textconv = hexdump -v -C

[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
  prompt = false

[merge]
  tool = vscode

[mergetool "vscode"]
  cmd = code --wait $MERGED

[alias]
  # Lol for when I forget
  aliases = config --get-regexp alias

  # List remotes
  rv = remote -v

  # Patch mode for adding so I don't add random stuff
  addp = add --patch

  # Why doesn't this already exist :(
  unstage = reset --hard HEAD

  # Shortcut to diff tool
  dt = difftool

  # Shortcut to diff tool on staged files
  dts = difftool --staged

  # Show the diff between the latest commit and the current state
  dl = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  # Find branches containing commit - lets track down what broke things!!
  fb = "!f() { git branch -a --contains $1; }; f"

  # Recently committed to branches
  recent = for-each-ref --count=30 --sort=-committerdate --format="%(committerdate:relative)%09%(refname:short)" refs/heads

  # Pretty logs
  lg = !"git lg1"
  lg1 = !"git lg1-specific --all"
  lg2 = !"git lg2-specific --all"
  lg3 = !"git lg3-specific --all"

  # Pretty log commands
  lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
  lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
  lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
  insteadOf = "gist:"

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[includeIf "gitdir:/Users/"]
  path = .gitconfig_macos

[includeIf "hasconfig:remote.*.url:https://github.com/github/**"]
  path = .gitconfig_work

[includeIf "hasconfig:remote.*.url:git@github.com:github/**"]
  path = .gitconfig_work
