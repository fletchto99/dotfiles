[core]
  excludesfile = ~/.gitignore_global
  untrackedCache = true

  # Make `git rebase` safer on macOS
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

[gpg]
    program = gpg

[user]
  name = Matt Langlois
  email = fletchto99@gmail.com
  signingkey = 6ECE58EECF6F8378

[includeIf "gitdir:/workspaces/"]
  path = .gitconfig_work

[github]
  user = fletchto99
  shelluser = matt

[credential]
  helper = osxkeychain

[protocol]
  version = 2

[fetch]
  prune = true

[commit]
  gpgsign = true

[color]
  ui = true

[color "branch"]
  current = magenta
  remote = cyan

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red reverse
  new = green reverse
  whitespace = white reverse

[color "status"]
  added = green
  changed = cyan
  untracked = blue bold
  branch = magenta

[diff]
  tool = Kaleidoscope
  renames = copies

[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C

[difftool]
  prompt = false

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"

[merge]
  tool = Kaleidoscope

[mergetool]
  prompt = false

[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustExitCode = true

[push]
  default = simple
  followTags = true

[alias]
    # Lol for when I forget
    aliases = config --get-regexp alias

    # List remotes
    rv = remote -v

    # Patch mode for adding so I don't add random stuff
    addp = add --patch

    # Why doesn't this already exist :(
    unstage = reset --hard HEAD

    # Shortcut to diff tool
    dt = difftool

    # Shortcut to diff tool on staged files
    dts = difftool --staged

    # Show the diff between the latest commit and the current state
    dl = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    # `git di $number` shows the diff between the state `$number` revisions ago and the current state
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # Find branches containing commit - lets track down what broke things!!
    fb = "!f() { git branch -a --contains $1; }; f"

    # Recently committed to branches
    recent = for-each-ref --count=30 --sort=-committerdate --format="%(committerdate:relative)%09%(refname:short)" refs/heads

    # Pretty logs
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    # Pretty log commands
    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

[url "git@github.com:"]

    insteadOf = "gh:"
    pushInsteadOf = "github:"
    pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
    insteadOf = "github:"

[url "git@gist.github.com:"]
    insteadOf = "gst:"
    pushInsteadOf = "gist:"
    pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
    insteadOf = "gist:"

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
